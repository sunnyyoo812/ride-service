version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ride_service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  ml-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.ml
    container_name: ml-service
    ports:
      - "8001:8001"
    depends_on:
      - kafka
      - redis
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./ml:/app/ml
      - ./data:/app/data

  api-service:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
    container_name: api-service
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - ml-service
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ride_service
      - REDIS_URL=redis://redis:6379
      - ML_SERVICE_URL=http://ml-service:8001
    volumes:
      - ./api:/app/api

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
    container_name: frontend
    ports:
      - "8501:8501"
    depends_on:
      - api-service
    environment:
      - API_URL=http://api-service:8000
    volumes:
      - ./frontend:/app/frontend

  data-producer:
    build:
      context: .
      dockerfile: docker/Dockerfile.producer
    container_name: data-producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    volumes:
      - ./data:/app/data

volumes:
  redis_data:
  postgres_data:
